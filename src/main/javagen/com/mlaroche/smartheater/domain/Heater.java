/**
 * Copyright [2018] [Matthieu Laroche - France]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.mlaroche.smartheater.domain;

import io.vertigo.dynamo.domain.model.Entity;
import io.vertigo.dynamo.domain.model.URI;
import io.vertigo.dynamo.domain.model.VAccessor;
import io.vertigo.dynamo.domain.model.EnumVAccessor;
import io.vertigo.dynamo.domain.stereotype.Field;
import io.vertigo.dynamo.domain.util.DtObjectUtil;
import io.vertigo.lang.Generated;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class Heater implements Entity {
	private static final long serialVersionUID = 1L;

	private Long heaId;
	private String name;
	private String dnsName;
	private Boolean active;

	@io.vertigo.dynamo.domain.stereotype.Association(
			name = "A_HEA_WCA",
			fkFieldName = "WCA_ID",
			primaryDtDefinitionName = "DT_WEEKLY_CALENDAR",
			primaryIsNavigable = true,
			primaryRole = "WeeklyCalendar",
			primaryLabel = "WeeklyCalendar",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DT_HEATER",
			foreignIsNavigable = false,
			foreignRole = "Heater",
			foreignLabel = "Heater",
			foreignMultiplicity = "0..*")
	private final VAccessor<com.mlaroche.smartheater.domain.WeeklyCalendar> wcaIdAccessor = new VAccessor<>(com.mlaroche.smartheater.domain.WeeklyCalendar.class, "WeeklyCalendar");

	@io.vertigo.dynamo.domain.stereotype.Association(
			name = "A_HEA_PRO",
			fkFieldName = "PRO_CD",
			primaryDtDefinitionName = "DT_PROTOCOL",
			primaryIsNavigable = true,
			primaryRole = "Protocol",
			primaryLabel = "Protocol",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DT_HEATER",
			foreignIsNavigable = false,
			foreignRole = "Heater",
			foreignLabel = "Heater",
			foreignMultiplicity = "0..*")
	private final EnumVAccessor<com.mlaroche.smartheater.domain.Protocol, com.mlaroche.smartheater.domain.ProtocolEnum> proCdAccessor = new EnumVAccessor<>(com.mlaroche.smartheater.domain.Protocol.class, "Protocol", com.mlaroche.smartheater.domain.ProtocolEnum.class);

	/** {@inheritDoc} */
	@Override
	public URI<Heater> getURI() {
		return DtObjectUtil.createURI(this);
	}
	
	/**
	 * Champ : ID.
	 * Récupère la valeur de la propriété 'Id'.
	 * @return Long heaId <b>Obligatoire</b>
	 */
	@Field(domain = "DO_ID", type = "ID", required = true, label = "Id")
	public Long getHeaId() {
		return heaId;
	}

	/**
	 * Champ : ID.
	 * Définit la valeur de la propriété 'Id'.
	 * @param heaId Long <b>Obligatoire</b>
	 */
	public void setHeaId(final Long heaId) {
		this.heaId = heaId;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Name'.
	 * @return String name
	 */
	@Field(domain = "DO_LABEL", label = "Name")
	public String getName() {
		return name;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Name'.
	 * @param name String
	 */
	public void setName(final String name) {
		this.name = name;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'DNS Name'.
	 * @return String dnsName
	 */
	@Field(domain = "DO_LABEL", label = "DNS Name")
	public String getDnsName() {
		return dnsName;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'DNS Name'.
	 * @param dnsName String
	 */
	public void setDnsName(final String dnsName) {
		this.dnsName = dnsName;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Active'.
	 * @return Boolean active
	 */
	@Field(domain = "DO_BOOLEAN", label = "Active")
	public Boolean getActive() {
		return active;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Active'.
	 * @param active Boolean
	 */
	public void setActive(final Boolean active) {
		this.active = active;
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'WeeklyCalendar'.
	 * @return Long wcaId <b>Obligatoire</b>
	 */
	@Field(domain = "DO_ID", type = "FOREIGN_KEY", required = true, label = "WeeklyCalendar")
	public Long getWcaId() {
		return (Long)  wcaIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'WeeklyCalendar'.
	 * @param wcaId Long <b>Obligatoire</b>
	 */
	public void setWcaId(final Long wcaId) {
		wcaIdAccessor.setId(wcaId);
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Protocol'.
	 * @return String proCd <b>Obligatoire</b>
	 */
	@Field(domain = "DO_LABEL", type = "FOREIGN_KEY", required = true, label = "Protocol")
	public String getProCd() {
		return (String)  proCdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Protocol'.
	 * @param proCd String <b>Obligatoire</b>
	 */
	public void setProCd(final String proCd) {
		proCdAccessor.setId(proCd);
	}

 	/**
	 * Association : Protocol.
	 * @return l'accesseur vers la propriété 'Protocol'
	 */
	public EnumVAccessor<com.mlaroche.smartheater.domain.Protocol, com.mlaroche.smartheater.domain.ProtocolEnum> protocol() {
		return proCdAccessor;
	}
	
	@Deprecated
	public com.mlaroche.smartheater.domain.Protocol getProtocol() {
		// we keep the lazyness
		if (!proCdAccessor.isLoaded()) {
			proCdAccessor.load();
		}
		return proCdAccessor.get();
	}

	/**
	 * Retourne l'URI: Protocol.
	 * @return URI de l'association
	 */
	@Deprecated
	public io.vertigo.dynamo.domain.model.URI<com.mlaroche.smartheater.domain.Protocol> getProtocolURI() {
		return proCdAccessor.getURI();
	}

 	/**
	 * Association : WeeklyCalendar.
	 * @return l'accesseur vers la propriété 'WeeklyCalendar'
	 */
	public VAccessor<com.mlaroche.smartheater.domain.WeeklyCalendar> weeklyCalendar() {
		return wcaIdAccessor;
	}
	
	@Deprecated
	public com.mlaroche.smartheater.domain.WeeklyCalendar getWeeklyCalendar() {
		// we keep the lazyness
		if (!wcaIdAccessor.isLoaded()) {
			wcaIdAccessor.load();
		}
		return wcaIdAccessor.get();
	}

	/**
	 * Retourne l'URI: WeeklyCalendar.
	 * @return URI de l'association
	 */
	@Deprecated
	public io.vertigo.dynamo.domain.model.URI<com.mlaroche.smartheater.domain.WeeklyCalendar> getWeeklyCalendarURI() {
		return wcaIdAccessor.getURI();
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DtObjectUtil.toString(this);
	}
}
