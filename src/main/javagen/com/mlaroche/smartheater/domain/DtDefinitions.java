package com.mlaroche.smartheater.domain;

import java.util.Arrays;
import java.util.Iterator;

import io.vertigo.dynamo.domain.metamodel.DtFieldName;
import io.vertigo.lang.Generated;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class DtDefinitions implements Iterable<Class<?>> {

	/**
	 * Enumération des DtDefinitions.
	 */
	public enum Definitions {
		/** Objet de données ElectricalConsumption. */
		ElectricalConsumption(com.mlaroche.smartheater.domain.ElectricalConsumption.class),
		/** Objet de données Heater. */
		Heater(com.mlaroche.smartheater.domain.Heater.class),
		/** Objet de données HeaterInfo. */
		HeaterInfo(com.mlaroche.smartheater.domain.HeaterInfo.class),
		/** Objet de données HeaterMode. */
		HeaterMode(com.mlaroche.smartheater.domain.HeaterMode.class),
		/** Objet de données HeatersByMode. */
		HeatersByMode(com.mlaroche.smartheater.domain.HeatersByMode.class),
		/** Objet de données Protocol. */
		Protocol(com.mlaroche.smartheater.domain.Protocol.class),
		/** Objet de données WeatherInfo. */
		WeatherInfo(com.mlaroche.smartheater.domain.WeatherInfo.class),
		/** Objet de données WeeklyCalendar. */
		WeeklyCalendar(com.mlaroche.smartheater.domain.WeeklyCalendar.class)		;

		private final Class<?> clazz;

		private Definitions(final Class<?> clazz) {
			this.clazz = clazz;
		}

		/** 
		 * Classe associée.
		 * @return Class d'implémentation de l'objet 
		 */
		public Class<?> getDtClass() {
			return clazz;
		}
	}

	/**
	 * Enumération des champs de ElectricalConsumption.
	 */
	public enum ElectricalConsumptionFields implements DtFieldName<com.mlaroche.smartheater.domain.ElectricalConsumption> {
		/** Propriété 'Heure'. */
		timestamp,
		/** Propriété 'Puissance moyenne'. */
		meanPower	}

	/**
	 * Enumération des champs de Heater.
	 */
	public enum HeaterFields implements DtFieldName<com.mlaroche.smartheater.domain.Heater> {
		/** Propriété 'Id'. */
		heaId,
		/** Propriété 'Nom'. */
		name,
		/** Propriété 'Nom DNS/Adresse IP'. */
		dnsName,
		/** Propriété 'Actif'. */
		active,
		/** Propriété 'Mode Auto'. */
		auto,
		/** Propriété 'Retour au mode auto'. */
		autoSwitch,
		/** Propriété 'Calendrier'. */
		wcaId,
		/** Propriété 'Protocol'. */
		proCd,
		/** Propriété 'Mode'. */
		modCd	}

	/**
	 * Enumération des champs de HeaterInfo.
	 */
	public enum HeaterInfoFields implements DtFieldName<com.mlaroche.smartheater.domain.HeaterInfo> {
		/** Propriété 'Température'. */
		temperature,
		/** Propriété 'Humidité'. */
		humidity,
		/** Propriété 'Mode'. */
		mode	}

	/**
	 * Enumération des champs de HeaterMode.
	 */
	public enum HeaterModeFields implements DtFieldName<com.mlaroche.smartheater.domain.HeaterMode> {
		/** Propriété 'Id'. */
		modCd,
		/** Propriété 'Nom'. */
		label	}

	/**
	 * Enumération des champs de HeatersByMode.
	 */
	public enum HeatersByModeFields implements DtFieldName<com.mlaroche.smartheater.domain.HeatersByMode> {
		/** Propriété 'Id'. */
		mode,
		/** Propriété 'Nombre'. */
		count	}

	/**
	 * Enumération des champs de Protocol.
	 */
	public enum ProtocolFields implements DtFieldName<com.mlaroche.smartheater.domain.Protocol> {
		/** Propriété 'Id'. */
		proCd,
		/** Propriété 'Nom'. */
		label	}

	/**
	 * Enumération des champs de WeatherInfo.
	 */
	public enum WeatherInfoFields implements DtFieldName<com.mlaroche.smartheater.domain.WeatherInfo> {
		/** Propriété 'Temperature'. */
		temperature,
		/** Propriété 'Humidité'. */
		humidity,
		/** Propriété 'Mode'. */
		location,
		/** Propriété 'Mode'. */
		icon,
		/** Propriété 'Mode'. */
		description	}

	/**
	 * Enumération des champs de WeeklyCalendar.
	 */
	public enum WeeklyCalendarFields implements DtFieldName<com.mlaroche.smartheater.domain.WeeklyCalendar> {
		/** Propriété 'Id'. */
		wcaId,
		/** Propriété 'Nom'. */
		name,
		/** Propriété 'Value as json'. */
		jsonValue	}

	/** {@inheritDoc} */
	@Override
	public Iterator<Class<?>> iterator() {
		return new Iterator<Class<?>>() {
			private Iterator<Definitions> it = Arrays.asList(Definitions.values()).iterator();

			/** {@inheritDoc} */
			@Override
			public boolean hasNext() {
				return it.hasNext();
			}

			/** {@inheritDoc} */
			@Override
			public Class<?> next() {
				return it.next().getDtClass();
			}
		};
	}
}
